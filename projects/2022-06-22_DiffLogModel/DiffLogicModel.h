// PluginDiffLogicModel.cpp
// Chris Kiefer (chrisk13fer@gmail.com)

// #include "SC_PlugIn.hpp"
// #include "DiffLogicModel.hpp"
extern "C"{
#include <stddef.h>
#include <stdlib.h>
#include <stdbool.h>

void logic_gate_net(char const *inp, char *out) {
	const char v0 = (char) (inp[80] & ~inp[43]);
	const char v1 = (char) (~(inp[24] ^ inp[57]));
	const char v2 = (char) (~(inp[33] & inp[1]));
	const char v3 = (char) (~inp[73]);
	const char v4 = (char) (inp[70] & ~inp[0]);
	const char v5 = (char) (~inp[18] | inp[46]);
	const char v6 = (char) (inp[34] & ~inp[67]);
	const char v7 = (char) (~(inp[75] | inp[66]));
	const char v8 = (char) (~(inp[25] | inp[23]));
	const char v9 = (char) (~(inp[7] | inp[13]));
	const char v10 = (char) (~inp[53] | inp[52]);
	const char v11 = (char) (~inp[47] | inp[31]);
	const char v12 = (char) (~(inp[80] & inp[16]));
	const char v13 = (char) (inp[36] & ~inp[33]);
	const char v14 = (char) (~inp[31] | inp[72]);
	const char v15 = (char) (inp[45] & ~inp[46]);
	const char v16 = (char) (~(char) 0);
	const char v17 = (char) (inp[35] | inp[12]);
	const char v18 = (char) (~(inp[9] & inp[22]));
	const char v19 = (char) (inp[63]);
	const char v20 = (char) (inp[2] | inp[25]);
	const char v21 = (char) (~(inp[4] | inp[48]));
	const char v22 = (char) (inp[75]);
	const char v23 = (char) (inp[27] & ~inp[33]);
	const char v24 = (char) (~inp[31] | inp[56]);
	const char v25 = (char) (inp[40] & ~inp[27]);
	const char v26 = (char) (inp[73] | inp[49]);
	const char v27 = (char) (inp[64] ^ inp[42]);
	const char v28 = (char) (~(inp[61] ^ inp[37]));
	const char v29 = (char) (inp[34] ^ inp[77]);
	const char v30 = (char) (inp[42] & inp[77]);
	const char v31 = (char) (inp[41] & inp[54]);
	const char v32 = (char) (~inp[44]);
	const char v33 = (char) (~inp[57] | inp[55]);
	const char v34 = (char) (~inp[6] | inp[79]);
	const char v35 = (char) (~inp[17]);
	const char v36 = (char) (~inp[1]);
	const char v37 = (char) (inp[47]);
	const char v38 = (char) (inp[47] & inp[26]);
	const char v39 = (char) (inp[24] ^ inp[64]);
	const char v40 = (char) (inp[61] & ~inp[78]);
	const char v41 = (char) (~(inp[66] & inp[38]));
	const char v42 = (char) (~(inp[68] | inp[79]));
	const char v43 = (char) (~inp[50] | inp[68]);
	const char v44 = (char) (inp[48] | inp[81]);
	const char v45 = (char) (inp[40]);
	const char v46 = (char) ((char) 0);
	const char v47 = (char) (~inp[76] | inp[7]);
	const char v48 = (char) (~inp[29]);
	const char v49 = (char) (inp[20] & inp[38]);
	const char v50 = (char) (~inp[76] | inp[63]);
	const char v51 = (char) (~inp[64]);
	const char v52 = (char) (~inp[63]);
	const char v53 = (char) (~(char) 0);
	const char v54 = (char) (~(char) 0);
	const char v55 = (char) (~inp[54] | inp[36]);
	const char v56 = (char) (inp[2] | inp[5]);
	const char v57 = (char) (~inp[21] | inp[56]);
	const char v58 = (char) (inp[67] & ~inp[15]);
	const char v59 = (char) (inp[22]);
	const char v60 = (char) (inp[44]);
	const char v61 = (char) (inp[8]);
	const char v62 = (char) (~(inp[67] ^ inp[51]));
	const char v63 = (char) (inp[25] | inp[74]);
	const char v64 = (char) (inp[65] & ~inp[69]);
	const char v65 = (char) (inp[0] ^ inp[43]);
	const char v66 = (char) (inp[80] & ~inp[32]);
	const char v67 = (char) (inp[42] & inp[33]);
	const char v68 = (char) (~(char) 0);
	const char v69 = (char) (inp[60] & ~inp[52]);
	const char v70 = (char) ((char) 0);
	const char v71 = (char) (inp[13] | inp[21]);
	const char v72 = (char) (~(inp[12] | inp[19]));
	const char v73 = (char) (~(inp[61] & inp[61]));
	const char v74 = (char) (~(inp[82] | inp[74]));
	const char v75 = (char) (~(inp[29] ^ inp[62]));
	const char v76 = (char) (~inp[3]);
	const char v77 = (char) (inp[65] & inp[72]);
	const char v78 = (char) (inp[49]);
	const char v79 = (char) (~inp[76]);
	const char v80 = (char) (inp[78]);
	const char v81 = (char) (inp[24]);
	const char v82 = (char) (~(inp[35] ^ inp[64]));
	const char v83 = (char) (inp[49]);
	const char v84 = (char) ((char) 0);
	const char v85 = (char) (inp[62]);
	const char v86 = (char) (~inp[24]);
	const char v87 = (char) (~(inp[48] ^ inp[29]));
	const char v88 = (char) (~inp[79] | inp[23]);
	const char v89 = (char) (inp[65]);
	const char v90 = (char) (inp[36] & inp[1]);
	const char v91 = (char) (~inp[30]);
	const char v92 = (char) (~inp[16] | inp[38]);
	const char v93 = (char) ((char) 0);
	const char v94 = (char) (~(inp[51] ^ inp[52]));
	const char v95 = (char) (~(inp[26] ^ inp[58]));
	const char v96 = (char) (~(inp[3] ^ inp[15]));
	const char v97 = (char) (inp[4] | inp[50]);
	const char v98 = (char) (~inp[53] | inp[62]);
	const char v99 = (char) (inp[13] & inp[81]);
	const char v100 = (char) (~(inp[39] & inp[65]));
	const char v101 = (char) (~(inp[62] | inp[14]));
	const char v102 = (char) (inp[2] ^ inp[6]);
	const char v103 = (char) (inp[72] ^ inp[53]);
	const char v104 = (char) (~inp[29] | inp[22]);
	const char v105 = (char) (~inp[8]);
	const char v106 = (char) (inp[3] & ~inp[21]);
	const char v107 = (char) (inp[11]);
	const char v108 = (char) (~(inp[82] | inp[36]));
	const char v109 = (char) (~(inp[78] ^ inp[63]));
	const char v110 = (char) (~inp[43] | inp[82]);
	const char v111 = (char) (~(inp[21] | inp[25]));
	const char v112 = (char) (~inp[28] | inp[28]);
	const char v113 = (char) (~inp[5]);
	const char v114 = (char) (inp[31] | inp[77]);
	const char v115 = (char) (~inp[60]);
	const char v116 = (char) (inp[26] | inp[81]);
	const char v117 = (char) (inp[0] ^ inp[78]);
	const char v118 = (char) (~(char) 0);
	const char v119 = (char) (inp[32] & ~inp[13]);
	const char v120 = (char) (~inp[45]);
	const char v121 = (char) (~inp[17]);
	const char v122 = (char) (~inp[50]);
	const char v123 = (char) (inp[38]);
	const char v124 = (char) (inp[50]);
	const char v125 = (char) ((char) 0);
	const char v126 = (char) (~inp[0] | inp[9]);
	const char v127 = (char) (inp[70] ^ inp[68]);
	const char v128 = (char) (~(inp[7] | inp[66]));
	const char v129 = (char) (~(inp[83] | inp[26]));
	const char v130 = (char) (~(inp[40] ^ inp[7]));
	const char v131 = (char) (inp[59] & ~inp[44]);
	const char v132 = (char) (~(inp[16] ^ inp[17]));
	const char v133 = (char) (inp[59] & inp[11]);
	const char v134 = (char) (~inp[37]);
	const char v135 = (char) (inp[45]);
	const char v136 = (char) (~(char) 0);
	const char v137 = (char) ((char) 0);
	const char v138 = (char) (inp[30] | inp[32]);
	const char v139 = (char) (inp[2]);
	const char v140 = (char) (inp[69] & inp[60]);
	const char v141 = (char) (~inp[40]);
	const char v142 = (char) (~inp[79] | inp[6]);
	const char v143 = (char) (~inp[12]);
	const char v144 = (char) (~(inp[10] | inp[12]));
	const char v145 = (char) (inp[30] | inp[10]);
	const char v146 = (char) (~(inp[1] ^ inp[71]));
	const char v147 = (char) (inp[49]);
	const char v148 = (char) (~(inp[60] ^ inp[51]));
	const char v149 = (char) (inp[45]);
	const char v150 = (char) (inp[57] & ~inp[22]);
	const char v151 = (char) (~(inp[39] & inp[27]));
	const char v152 = (char) (~(inp[55] | inp[80]));
	const char v153 = (char) ((char) 0);
	const char v154 = (char) (inp[69]);
	const char v155 = (char) (inp[54] & ~inp[9]);
	const char v156 = (char) (~(inp[35] | inp[73]));
	const char v157 = (char) (inp[30] ^ inp[70]);
	const char v158 = (char) (inp[4] & inp[52]);
	const char v159 = (char) (~inp[67]);
	const char v160 = (char) (inp[17]);
	const char v161 = (char) (~inp[71] | inp[8]);
	const char v162 = (char) (inp[10] | inp[53]);
	const char v163 = (char) (~inp[72]);
	const char v164 = (char) (inp[15]);
	const char v165 = (char) (inp[44]);
	const char v166 = (char) (~inp[66]);
	const char v167 = (char) (~inp[8]);
	const char v168 = (char) (v57 ^ v119);
	const char v169 = (char) (v127 & ~v150);
	const char v170 = (char) (~v40 | v136);
	const char v171 = (char) ((char) 0);
	const char v172 = (char) (v167);
	const char v173 = (char) (v99);
	const char v174 = (char) (~(v55 & v79));
	const char v175 = (char) (~(v27 & v45));
	const char v176 = (char) (v16 & v18);
	const char v177 = (char) (v106);
	const char v178 = (char) (v146 & ~v56);
	const char v179 = (char) (~v157);
	const char v180 = (char) (~v22 | v50);
	const char v181 = (char) (~v138 | v91);
	const char v182 = (char) (v3);
	const char v183 = (char) (v107 & ~v24);
	const char v184 = (char) (v4 & v108);
	const char v185 = (char) (v75 & v123);
	const char v186 = (char) (~v126);
	const char v187 = (char) (v121);
	const char v188 = (char) (~v133 | v39);
	const char v189 = (char) (~v87);
	const char v190 = (char) (v123);
	const char v191 = (char) (v153 ^ v150);
	const char v192 = (char) (v97 & v142);
	const char v193 = (char) (~v63 | v90);
	const char v194 = (char) (v111);
	const char v195 = (char) (~(v35 | v122));
	const char v196 = (char) (~(v14 ^ v16));
	const char v197 = (char) (v28 ^ v34);
	const char v198 = (char) (v98);
	const char v199 = (char) (~(char) 0);
	const char v200 = (char) (~v145);
	const char v201 = (char) (v84 & ~v102);
	const char v202 = (char) (v35);
	const char v203 = (char) (v13 ^ v74);
	const char v204 = (char) (v89);
	const char v205 = (char) (~v36 | v0);
	const char v206 = (char) (~v103 | v125);
	const char v207 = (char) (~(v151 | v49));
	const char v208 = (char) (v120 & v118);
	const char v209 = (char) (~v41);
	const char v210 = (char) (v85 & ~v141);
	const char v211 = (char) (v17);
	const char v212 = (char) (v162);
	const char v213 = (char) (~(v19 ^ v48));
	const char v214 = (char) (~v165 | v100);
	const char v215 = (char) (v93 | v5);
	const char v216 = (char) (~v45 | v144);
	const char v217 = (char) (~v3);
	const char v218 = (char) (v86);
	const char v219 = (char) (~v98);
	const char v220 = (char) (v20 & ~v151);
	const char v221 = (char) (~v65 | v60);
	const char v222 = (char) (~v125);
	const char v223 = (char) (v136);
	const char v224 = (char) (v161);
	const char v225 = (char) (v116);
	const char v226 = (char) (~v26);
	const char v227 = (char) (v50 & ~v56);
	const char v228 = (char) (~v1);
	const char v229 = (char) (~v2 | v83);
	const char v230 = (char) (v138);
	const char v231 = (char) (v130);
	const char v232 = (char) (v128 | v81);
	const char v233 = (char) (~v99);
	const char v234 = (char) (~(v135 & v88));
	const char v235 = (char) (~(v59 ^ v94));
	const char v236 = (char) ((char) 0);
	const char v237 = (char) (v134 ^ v12);
	const char v238 = (char) (~v117);
	const char v239 = (char) (v88);
	const char v240 = (char) (~(v52 ^ v90));
	const char v241 = (char) (v156 & v21);
	const char v242 = (char) (~(v92 ^ v154));
	const char v243 = (char) (~(v5 & v145));
	const char v244 = (char) (~(v116 | v156));
	const char v245 = (char) (~(char) 0);
	const char v246 = (char) (v124 & v114);
	const char v247 = (char) (v144 ^ v101);
	const char v248 = (char) (~v96);
	const char v249 = (char) (v73 & ~v81);
	const char v250 = (char) (v7 ^ v159);
	const char v251 = (char) (~v55 | v28);
	const char v252 = (char) (~(char) 0);
	const char v253 = (char) (~v73 | v119);
	const char v254 = (char) (v97 & ~v120);
	const char v255 = (char) (~v2);
	const char v256 = (char) (~v115);
	const char v257 = (char) (~(v153 & v141));
	const char v258 = (char) (v102 & ~v105);
	const char v259 = (char) (v92 & ~v155);
	const char v260 = (char) (v64 & ~v72);
	const char v261 = (char) (v6);
	const char v262 = (char) (v68 | v72);
	const char v263 = (char) (~(v108 & v38));
	const char v264 = (char) (~v30 | v67);
	const char v265 = (char) (v128 & ~v109);
	const char v266 = (char) (~(v104 & v161));
	const char v267 = (char) (~v103 | v67);
	const char v268 = (char) (~v80 | v62);
	const char v269 = (char) (v71);
	const char v270 = (char) ((char) 0);
	const char v271 = (char) (v20 & v149);
	const char v272 = (char) (v149);
	const char v273 = (char) (v146);
	const char v274 = (char) (~v44);
	const char v275 = (char) (v18 | v82);
	const char v276 = (char) (~v160);
	const char v277 = (char) (~(v40 & v110));
	const char v278 = (char) (~v41);
	const char v279 = (char) ((char) 0);
	const char v280 = (char) (~(v14 ^ v112));
	const char v281 = (char) (v62 | v78);
	const char v282 = (char) (v164 & v100);
	const char v283 = (char) (v89);
	const char v284 = (char) (~v17);
	const char v285 = (char) (v61 ^ v7);
	const char v286 = (char) (~v31 | v76);
	const char v287 = (char) (v139);
	const char v288 = (char) (v15);
	const char v289 = (char) (~(v148 ^ v134));
	const char v290 = (char) (v165 ^ v70);
	const char v291 = (char) (~(v54 | v25));
	const char v292 = (char) (v44);
	const char v293 = (char) (~v87 | v101);
	const char v294 = (char) (v167);
	const char v295 = (char) (v114 & v131);
	const char v296 = (char) (~(v95 ^ v112));
	const char v297 = (char) (v61);
	const char v298 = (char) (v106 & ~v152);
	const char v299 = (char) (~v8);
	const char v300 = (char) (~(char) 0);
	const char v301 = (char) ((char) 0);
	const char v302 = (char) ((char) 0);
	const char v303 = (char) (v15 & ~v33);
	const char v304 = (char) (v10 & ~v130);
	const char v305 = (char) (v23 & ~v158);
	const char v306 = (char) (v166);
	const char v307 = (char) (v26 & v11);
	const char v308 = (char) (~(v140 | v4));
	const char v309 = (char) (~(char) 0);
	const char v310 = (char) ((char) 0);
	const char v311 = (char) (v12);
	const char v312 = (char) ((char) 0);
	const char v313 = (char) (~(v29 & v85));
	const char v314 = (char) (~v79);
	const char v315 = (char) (v54 & v91);
	const char v316 = (char) (~v31);
	const char v317 = (char) (~(v75 ^ v147));
	const char v318 = (char) (~(v105 | v132));
	const char v319 = (char) (v113 ^ v143);
	const char v320 = (char) (~(v160 ^ v147));
	const char v321 = (char) (v30 | v53);
	const char v322 = (char) (v51 & ~v154);
	const char v323 = (char) (v139);
	const char v324 = (char) (v163);
	const char v325 = (char) (v59 & v71);
	const char v326 = (char) (v143);
	const char v327 = (char) (v152 & ~v104);
	const char v328 = (char) (~(char) 0);
	const char v329 = (char) (v70 & v8);
	const char v330 = (char) (v129 & ~v77);
	const char v331 = (char) (v148 & ~v25);
	const char v332 = (char) (~v111);
	const char v333 = (char) (v95);
	const char v334 = (char) (v51);
	const char v335 = (char) (v94 & ~v19);
	const char v336 = (char) (~v190 | v200);
	const char v337 = (char) (v238 & v281);
	const char v338 = (char) (v279 & ~v264);
	const char v339 = (char) (~v262 | v306);
	const char v340 = (char) (~v237);
	const char v341 = (char) (~v232 | v312);
	const char v342 = (char) (~v290);
	const char v343 = (char) (~v333);
	const char v344 = (char) (v284);
	const char v345 = (char) (v281);
	const char v346 = (char) (~v280);
	const char v347 = (char) (~(v300 ^ v272));
	const char v348 = (char) (v202);
	const char v349 = (char) (~v253);
	const char v350 = (char) (~v172);
	const char v351 = (char) (~(v229 ^ v241));
	const char v352 = (char) (v319);
	const char v353 = (char) (~v279);
	const char v354 = (char) (~v270);
	const char v355 = (char) (v274 & v176);
	const char v356 = (char) (~v304);
	const char v357 = (char) (v273 & ~v330);
	const char v358 = (char) (v269);
	const char v359 = (char) (~v297);
	const char v360 = (char) (v288);
	const char v361 = (char) (v203 & ~v294);
	const char v362 = (char) (~v251);
	const char v363 = (char) (~(v216 ^ v182));
	const char v364 = (char) (v210);
	const char v365 = (char) (~(v258 & v239));
	const char v366 = (char) (~(char) 0);
	const char v367 = (char) (v202);
	const char v368 = (char) (v245 & v230);
	const char v369 = (char) (v314 & ~v227);
	const char v370 = (char) (~(v284 | v171));
	const char v371 = (char) (v285);
	const char v372 = (char) (~(v240 & v256));
	const char v373 = (char) (~v250);
	const char v374 = (char) (~v185);
	const char v375 = (char) (~(v324 | v222));
	const char v376 = (char) (v209 & v285);
	const char v377 = (char) (~v289);
	const char v378 = (char) (v170 | v252);
	const char v379 = (char) (v225 & ~v207);
	const char v380 = (char) (~(v194 | v218));
	const char v381 = (char) (v318);
	const char v382 = (char) (~v278);
	const char v383 = (char) (v317);
	const char v384 = (char) (v266);
	const char v385 = (char) (v269 | v255);
	const char v386 = (char) (~v298 | v198);
	const char v387 = (char) (~v193);
	const char v388 = (char) (~(v234 | v211));
	const char v389 = (char) (~(v219 ^ v300));
	const char v390 = (char) (~v265 | v227);
	const char v391 = (char) (~v216 | v169);
	const char v392 = (char) (~v196);
	const char v393 = (char) (v271);
	const char v394 = (char) (~v259);
	const char v395 = (char) (~v231);
	const char v396 = (char) (v254);
	const char v397 = (char) (~v335);
	const char v398 = (char) (v187);
	const char v399 = (char) (v238 & ~v273);
	const char v400 = (char) (v242 & ~v255);
	const char v401 = (char) (~v185);
	const char v402 = (char) (v317 | v246);
	const char v403 = (char) (v302 & ~v267);
	const char v404 = (char) (~v315);
	const char v405 = (char) (~v276 | v234);
	const char v406 = (char) (v225 & ~v176);
	const char v407 = (char) (~(v334 ^ v261));
	const char v408 = (char) (~(v324 & v323));
	const char v409 = (char) (v326 & v319);
	const char v410 = (char) (v302 | v215);
	const char v411 = (char) (~v332);
	const char v412 = (char) (v244);
	const char v413 = (char) (v308 | v277);
	const char v414 = (char) (v243 & v183);
	const char v415 = (char) (~v247);
	const char v416 = (char) (v179);
	const char v417 = (char) (~v310);
	const char v418 = (char) (v297);
	const char v419 = (char) (~(v235 | v191));
	const char v420 = (char) (v290 & ~v235);
	const char v421 = (char) (~(v205 & v190));
	const char v422 = (char) (~v303);
	const char v423 = (char) (~(v181 & v274));
	const char v424 = (char) (v173);
	const char v425 = (char) (v220);
	const char v426 = (char) (v295 & v293);
	const char v427 = (char) (v296);
	const char v428 = (char) (~v193);
	const char v429 = (char) (v203 & ~v309);
	const char v430 = (char) (v181 & ~v168);
	const char v431 = (char) (~(v276 | v233));
	const char v432 = (char) (v323 & v175);
	const char v433 = (char) (~(v256 & v178));
	const char v434 = (char) (~v222);
	const char v435 = (char) (~v179);
	const char v436 = (char) (~v236 | v306);
	const char v437 = (char) (~v226);
	const char v438 = (char) (~(v223 & v332));
	const char v439 = (char) ((char) 0);
	const char v440 = (char) (~v240);
	const char v441 = (char) (v303);
	const char v442 = (char) (~(v182 | v198));
	const char v443 = (char) ((char) 0);
	const char v444 = (char) (~(v213 & v195));
	const char v445 = (char) (~v221);
	const char v446 = (char) (~v325);
	const char v447 = (char) (~(v213 | v180));
	const char v448 = (char) (~v288);
	const char v449 = (char) (~v228 | v244);
	const char v450 = (char) (~v268);
	const char v451 = (char) (~v186);
	const char v452 = (char) (~v275 | v260);
	const char v453 = (char) (v200);
	const char v454 = (char) (v271);
	const char v455 = (char) (~v228);
	const char v456 = (char) (~(v214 & v313));
	const char v457 = (char) (~(v329 ^ v172));
	const char v458 = (char) (v177 & v168);
	const char v459 = (char) (v325 & ~v331);
	const char v460 = (char) (v178);
	const char v461 = (char) (v307);
	const char v462 = (char) (~v305 | v320);
	const char v463 = (char) (v326 | v217);
	const char v464 = (char) (v278);
	const char v465 = (char) (v254 & v272);
	const char v466 = (char) (~v250);
	const char v467 = (char) (v275 & v309);
	const char v468 = (char) (~v189);
	const char v469 = (char) (v201 | v308);
	const char v470 = (char) (v224);
	const char v471 = (char) (~v292);
	const char v472 = (char) (~v224 | v301);
	const char v473 = (char) ((char) 0);
	const char v474 = (char) (~(v283 | v249));
	const char v475 = (char) (~v283);
	const char v476 = (char) (~(v294 ^ v330));
	const char v477 = (char) (~v233);
	const char v478 = (char) (v207 | v171);
	const char v479 = (char) (~(v315 ^ v205));
	const char v480 = (char) (~(v191 | v318));
	const char v481 = (char) (v282);
	const char v482 = (char) (~(v208 & v232));
	const char v483 = (char) (v260 | v259);
	const char v484 = (char) (v268);
	const char v485 = (char) (v307);
	const char v486 = (char) (~v206);
	const char v487 = (char) (~(v174 & v214));
	const char v488 = (char) (~v296);
	const char v489 = (char) (v289);
	const char v490 = (char) (~v199);
	const char v491 = (char) (v183 & ~v196);
	const char v492 = (char) (~v295);
	const char v493 = (char) (v331);
	const char v494 = (char) (~(v328 ^ v187));
	const char v495 = (char) (~(char) 0);
	const char v496 = (char) (v245 & ~v223);
	const char v497 = (char) (v293);
	const char v498 = (char) (v316 | v251);
	const char v499 = (char) (v219);
	const char v500 = (char) (~v304);
	const char v501 = (char) (v320 & v230);
	const char v502 = (char) ((char) 0);
	const char v503 = (char) (v286 & v265);
	out[0] = (char) (~v481 | v455);
	out[1] = (char) (v415 & v498);
	out[2] = (char) (~v428);
	out[3] = (char) (v430 & ~v431);
	out[4] = (char) (v394 & ~v436);
	out[5] = (char) (v462 & ~v458);
	out[6] = (char) (~(v347 & v356));
	out[7] = (char) (~(v453 | v392));
	out[8] = (char) (~v467);
	out[9] = (char) (v434 & ~v485);
	out[10] = (char) (~v374 | v498);
	out[11] = (char) (v345);
	out[12] = (char) (~v486);
	out[13] = (char) (~(char) 0);
	out[14] = (char) (~v360);
	out[15] = (char) (~v442);
	out[16] = (char) (v448 & v357);
	out[17] = (char) (v371);
	out[18] = (char) (~v500);
	out[19] = (char) (v424 & ~v432);
	out[20] = (char) (~(char) 0);
	out[21] = (char) (~(v471 | v485));
	out[22] = (char) (~v396);
	out[23] = (char) (~v382);
	out[24] = (char) (v501);
	out[25] = (char) (~v453);
	out[26] = (char) (v354 & ~v360);
	out[27] = (char) (~v412);
	out[28] = (char) (v418);
	out[29] = (char) (v397 ^ v491);
	out[30] = (char) (~(char) 0);
	out[31] = (char) (v484 ^ v484);
	out[32] = (char) (v353 & ~v386);
	out[33] = (char) (~v346 | v361);
	out[34] = (char) (~v493);
	out[35] = (char) ((char) 0);
	out[36] = (char) (v373);
	out[37] = (char) (v459);
	out[38] = (char) (v352 & ~v502);
	out[39] = (char) (v375 & v460);
	out[40] = (char) (v418);
	out[41] = (char) (v451 & ~v474);
	out[42] = (char) (~v356);
	out[43] = (char) (v434);
	out[44] = (char) (v456 ^ v496);
	out[45] = (char) (~(v433 & v369));
	out[46] = (char) (~v336);
	out[47] = (char) (~v449);
	out[48] = (char) (~(v482 | v441));
	out[49] = (char) (~(v340 | v480));
	out[50] = (char) (v358);
	out[51] = (char) ((char) 0);
	out[52] = (char) (~(v442 | v426));
	out[53] = (char) (v457 & ~v403);
	out[54] = (char) (~(char) 0);
	out[55] = (char) (v349);
	out[56] = (char) (~v393);
	out[57] = (char) (~(v438 ^ v423));
	out[58] = (char) (v415);
	out[59] = (char) (v411);
	out[60] = (char) (v450 & ~v344);
	out[61] = (char) (~v384);
	out[62] = (char) (v343);
	out[63] = (char) (v477);
	out[64] = (char) (~(v394 & v421));
	out[65] = (char) ((char) 0);
	out[66] = (char) (v343);
	out[67] = (char) (~v478);
	out[68] = (char) (~(v387 ^ v346));
	out[69] = (char) (v466);
	out[70] = (char) (~v479);
	out[71] = (char) (~(char) 0);
	out[72] = (char) (v400 & v413);
	out[73] = (char) (v357);
	out[74] = (char) (~v450);
	out[75] = (char) (~v425);
	out[76] = (char) (~(char) 0);
	out[77] = (char) (v354 ^ v407);
	out[78] = (char) (v404);
	out[79] = (char) (v451);
	out[80] = (char) (~(v489 | v426));
	out[81] = (char) (v381);
	out[82] = (char) (~v449);
	out[83] = (char) (~(v416 ^ v405));
	out[84] = (char) (~v364);
	out[85] = (char) (v351 | v447);
	out[86] = (char) (v432 & v472);
	out[87] = (char) (v445);
	out[88] = (char) (v446 & ~v410);
	out[89] = (char) (~v406);
	out[90] = (char) (v475);
	out[91] = (char) (v380 & v500);
	out[92] = (char) (v396);
	out[93] = (char) (~(v390 | v348));
	out[94] = (char) (v416);
	out[95] = (char) (v380 ^ v372);
	out[96] = (char) (~v448);
	out[97] = (char) (~v391);
	out[98] = (char) ((char) 0);
	out[99] = (char) (~(v367 & v409));
	out[100] = (char) (~(v390 ^ v460));
	out[101] = (char) (v503 & ~v468);
	out[102] = (char) (~v411);
	out[103] = (char) (~v367);
	out[104] = (char) (~(char) 0);
	out[105] = (char) (~v457 | v389);
	out[106] = (char) ((char) 0);
	out[107] = (char) (~v464 | v430);
	out[108] = (char) (v491);
	out[109] = (char) (~(char) 0);
	out[110] = (char) (~v379);
	out[111] = (char) (v347 & ~v443);
	out[112] = (char) (~(v398 & v395));
	out[113] = (char) (v372 | v439);
	out[114] = (char) (~(v359 ^ v345));
	out[115] = (char) (~v385);
	out[116] = (char) (~(v427 ^ v470));
	out[117] = (char) (v339 & ~v370);
	out[118] = (char) (v342 & v359);
	out[119] = (char) (v389 ^ v495);
	out[120] = (char) (~(v424 | v376));
	out[121] = (char) (~v358 | v382);
	out[122] = (char) (v465);
	out[123] = (char) (~(v480 ^ v495));
	out[124] = (char) (~(v423 ^ v473));
	out[125] = (char) (v393);
	out[126] = (char) (~v476);
	out[127] = (char) (~v377);
	out[128] = (char) (v368 ^ v408);
	out[129] = (char) (~(char) 0);
	out[130] = (char) (v399);
	out[131] = (char) (~v476);
	out[132] = (char) (~v420);
	out[133] = (char) (v402 & ~v375);
	out[134] = (char) (v336);
	out[135] = (char) (~v337 | v439);
	out[136] = (char) (v412 | v392);
	out[137] = (char) (~v419);
	out[138] = (char) (~v337);
	out[139] = (char) (~v379);
	out[140] = (char) (~(v377 | v492));
	out[141] = (char) (v425);
	out[142] = (char) (~v349 | v383);
	out[143] = (char) (v403 ^ v482);
	out[144] = (char) (v445 | v340);
	out[145] = (char) (~(v386 & v391));
	out[146] = (char) (v494);
	out[147] = (char) (v461);
	out[148] = (char) (v387 & v401);
	out[149] = (char) (v429 & ~v350);
	out[150] = (char) (~v483);
	out[151] = (char) (~v487);
	out[152] = (char) (v440);
	out[153] = (char) (~v385);
	out[154] = (char) (v478 & v338);
	out[155] = (char) (v455);
	out[156] = (char) (v441);
	out[157] = (char) (v469);
	out[158] = (char) (v467 | v437);
	out[159] = (char) (v427);
	out[160] = (char) (~v376);
	out[161] = (char) (~v444);
	out[162] = (char) (~v371);
	out[163] = (char) (v489);
	out[164] = (char) (~v422);
	out[165] = (char) (v479);
	out[166] = (char) (v440);
	out[167] = (char) (v471);
}

void apply_logic_gate_net (bool const *inp, int *out, size_t len) {
    char *inp_temp = (char*)malloc(84*sizeof(char));
    char *out_temp = (char*)malloc(168*sizeof(char));
    char *out_temp_o = (char*)malloc(7*sizeof(char));
    
    for(size_t i = 0; i < len; ++i) {
    
        // Converting the bool array into a bitpacked array
        for(size_t d = 0; d < 84; ++d) {
            char res = (char) 0;
            for(size_t b = 0; b < 8; ++b) {
                res <<= 1;
                res += !!(inp[i * 84 * 8 + (8 - b - 1) * 84 + d]);
            }
            inp_temp[d] = res;
        }
    
        // Applying the logic gate net
        logic_gate_net(inp_temp, out_temp);
        
        // GroupSum of the results via logic gate networks
        for(size_t c = 0; c < 2; ++c) {  // for each class
            // Initialize the output bits
            for(size_t d = 0; d < 7; ++d) {
                out_temp_o[d] = (char) 0;
            }
            
            // Apply the adder logic gate network
            for(size_t a = 0; a < 84; ++a) {
                char carry = out_temp[c * 84 + a];
                char out_temp_o_d;
                for(int d = 7 - 1; d >= 0; --d) {
                    out_temp_o_d  = out_temp_o[d];
                    out_temp_o[d] = carry ^ out_temp_o_d;
                    carry         = carry & out_temp_o_d;
                }
            }
            
            // Unpack the result bits
            for(size_t b = 0; b < 8; ++b) {
                const char bit_mask = (char) 1 << b;
                int res = 0;
                for(size_t d = 0; d < 7; ++d) {
                    res <<= 1;
                    res += !!(out_temp_o[d] & bit_mask);
                }
                out[(i * 8 + b) * 2 + c] = res;
            }
        }
    }
    free(inp_temp);
    free(out_temp);
    free(out_temp_o);
}


}


// static InterfaceTable* ft;

// namespace DiffLogic {

// DiffLogicModel::DiffLogicModel() {
//     mCalcFunc = make_calc_function<DiffLogicModel, &DiffLogicModel::next>();
//     // int numDims = mNumInputs;
//     next(1);
// }

int DiffLogicModelNext(std::vector<double> mfccs, int numMFCCs) {
    // const float* input = in(2);
    // float* outbuf = output(0);

    bool modelInputs[84];
    size_t bitCounter=0;
    for(size_t i=0; i < numMFCCs; i++) {
        // rescale 0-127
		// pre-scaling to 7-bit range
        // double inVal = (*in(i) + 68.438636779785) / 189.473068237305 * 127.0;
		double inVal = (mfccs[i] + 68.438636779785) / 189.473068237305 * 127.0;
        size_t inInt = static_cast<size_t>(inVal);
        for(size_t bit = 0; bit < 7; bit++) {
            modelInputs[bitCounter] = inInt & 1;
            bitCounter++;
            inInt = inInt >> 1;
        }
    }

    int modelOutputs[2];

    apply_logic_gate_net(&modelInputs[0], &modelOutputs[0], 1);

    int out = modelOutputs[0] > modelOutputs[1] ? 0 : 1;
	return out;
    // simple gain function
    // for (int i = 0; i < nSamples; ++i) {
    //     outbuf[i] = *input;
    // }
}

// } // namespace DiffLogic

// PluginLoad(DiffLogicModelUGens) {
//     // Plugin magic
//     ft = inTable;
//     registerUnit<DiffLogic::DiffLogicModel>(ft, "DiffLogicModel", false);
// }
